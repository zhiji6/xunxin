<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xunxin.dao.im.UserShieldsMapper" >
  <resultMap id="BaseResultMap" type="com.xunxin.vo.im.UserShields" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="shield_id" property="shieldId" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="createDate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="updateDate" property="updatedate" jdbcType="TIMESTAMP" />
    <result column="is_shield" property="isShield" jdbcType="INTEGER" />
  </resultMap>
    <resultMap id="BaseResultFriendMap" type="com.xunxin.vo.im.UserShields" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="report_id" property="shieldId" jdbcType="INTEGER" />
    <result column="is_delete" property="isDelete" jdbcType="INTEGER" />
    <result column="createDate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="updateDate" property="updatedate" jdbcType="TIMESTAMP" />
    <result column="nickName" property="nickName" jdbcType="VARCHAR" />
    <result column="gender" property="sexualOrientation" jdbcType="VARCHAR" />
    <result column="introduce" property="openRemark" jdbcType="VARCHAR" />
    <result column="is_login" property="isLogin" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, shield_id, is_delete, createDate, updateDate
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.xunxin.vo.im.UserShieldsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from xunxin_user_shield
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from xunxin_user_shield
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from xunxin_user_shield
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xunxin.vo.im.UserShieldsExample" >
    delete from xunxin_user_shield
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xunxin.vo.im.UserShields" >
    insert into xunxin_user_shield (id, user_id, shield_id, 
      is_delete, createDate, updateDate)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{shieldId,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=INTEGER}, #{createdate,jdbcType=TIMESTAMP}, #{updatedate,jdbcType=TIMESTAMP}) 
    
  </insert>
  <insert id="insertSelective" parameterType="com.xunxin.vo.im.UserShields" >
    insert into xunxin_user_shield
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="shieldId != null" >
        shield_id,
      </if>
      <if test="isDelete != null" >
        is_delete,
      </if>
      <if test="createdate != null" >
        createDate,
      </if>
      <if test="updatedate != null" >
        updateDate,
      </if>
     
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="shieldId != null" >
        #{shieldId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedate != null" >
        #{updatedate,jdbcType=TIMESTAMP},
      </if>
    
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xunxin.vo.im.UserShieldsExample" resultType="java.lang.Integer" >
    select count(*) from xunxin_user_shield
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update xunxin_user_shield
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.shieldId != null" >
        shield_id = #{record.shieldId,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null" >
        is_delete = #{record.isDelete,jdbcType=INTEGER},
      </if>
      <if test="record.createdate != null" >
        createDate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedate != null" >
        updateDate = #{record.updatedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isShield != null" >
        is_shield = #{record.isShield,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update xunxin_user_shield
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      shield_id = #{record.shieldId,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=INTEGER},
      createDate = #{record.createdate,jdbcType=TIMESTAMP},
      updateDate = #{record.updatedate,jdbcType=TIMESTAMP}
 
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xunxin.vo.im.UserShields" >
    update xunxin_user_shield
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="shieldId != null" >
        shield_id = #{shieldId,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null" >
        is_delete = #{isDelete,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        createDate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedate != null" >
        updateDate = #{updatedate,jdbcType=TIMESTAMP},
      </if>
     
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xunxin.vo.im.UserShields" >
    update xunxin_user_shield
    set user_id = #{userId,jdbcType=INTEGER},
      shield_id = #{shieldId,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=INTEGER},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      updateDate = #{updatedate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!--我屏蔽的人  -->
  <select id="findShieldsByUserId" resultMap="BaseResultFriendMap" parameterType="java.lang.Integer" >
		   SELECT
				s.id,
				s.user_id,
				s.report_id,
				s.is_delete,
				s.createDate,
				s.updateDate,
				u.nickName,
				u.gender,
				u.introduce,
				u.is_login
			FROM
				xunxin_user_report s
			LEFT JOIN xunxin_user u ON s.user_id = u.uid
			WHERE
				s.user_id = #{userId,jdbcType=INTEGER}
			AND s.type = 'shield'
  </select>
    	<!-- 移除屏蔽的人 -->
   <update id="deleteShield" parameterType="java.lang.Integer" >
		    UPDATE xunxin_user_shield
				SET is_shield = 1
				WHERE
					user_id = #{userId,jdbcType=INTEGER}
				AND shield_id =  #{id,jdbcType=INTEGER}
  </update>
</mapper>