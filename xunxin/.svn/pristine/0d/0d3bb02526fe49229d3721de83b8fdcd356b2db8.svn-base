package com.xunxin.util;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;

/**
 * <p>期数的处理</p>	
 * <p>User: Zhugong Team
 * <p>Date: 2016年12月28日 下午1:51:21
 * <p>Version: 1.0
 */
public class PeriodsUtil {

	/**
	 * 获取当前期数
	 * @return
	 */
	public static String getPeriods(Date date){
		String per = dateToString(date);
		int period =  dateToInt(date);
		int iods = period/5 - 107;
		String periods = per + String.valueOf(iods);
		return periods;
		
	}
	//获取当前时间对应的小时数
	public static int getHour(Date date){
		SimpleDateFormat simple = new SimpleDateFormat("HH:mm:ss");
	
		String format = simple.format(date);
		String[] split = format.split(":");
		String time = split[0];
		int hh = Integer.parseInt(time);
		return hh;
	}
	//获取当前时间对应的 yyyyMMdd HHmmss
	public static Date getStringToDate(String timestamp) throws ParseException{
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");  
	    Date date = sdf.parse(timestamp); 
		return date;
	}
	//获取当前时间对应的 yyyyMMdd HHmmss
	public static String getWholeTime(Date date){
		SimpleDateFormat simple = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String format = simple.format(date);
		return format;
	}
	//获取当前时间对应的 yyyyMMdd
	public static String getTian(Date date){
		SimpleDateFormat simple = new SimpleDateFormat("yyyy-MM-dd");
		
		String format = simple.format(date);
		String[] split = format.split("-");
		String time = split[0]+split[1]+split[2];
		return time;
	}
	//获取当前时间对应的时间 HH-mm-ss
	public static String getShijian(Date date){
		SimpleDateFormat simple = new SimpleDateFormat("HH-mm-ss");
		
		String format = simple.format(date);
		String[] split = format.split("-");
		String time = split[0]+split[1]+split[2];
		return time;
	}
	
	
	private static int dateToInt(Date date){
		String[] da = date.toLocaleString().split("-");
		String ss = da[2];
		int s = 0;
		System.out.println(ss.length());
		if(ss.length() == 11){
			String se = ss.substring(3);
			String[] sh = se.split(":");
			s = (Integer.parseInt(sh[0])*60+Integer.parseInt(sh[1]));
		}
		if(ss.length() == 10){
			String se = ss.substring(3);
			String[] sh = se.split(":");
			s = (Integer.parseInt(sh[0])*60+Integer.parseInt(sh[1]));
		}
		if(ss.length() == 9){
			String se = ss.substring(2);
			String[] sh = se.split(":");
			s = (Integer.parseInt(sh[0])*60+Integer.parseInt(sh[1]));
		}
		return s;
	}
	
	public static String dateToString(Date date){
		String[] da = date.toLocaleString().split("-");
		String se = null;
		String ss = da[0] + da[1] + da[2];
		String[] sh = ss.split(":");
		String sm = sh[0]+sh[1]+sh[2];
		System.err.println(sm.length());
		if(sm.length() == 12){
			se = ss.substring(4, 6);
		}
		if(sm.length() == 13){
			se = ss.substring(4, 7);
		}
		if(sm.length() == 14){
			se = ss.substring(4, 7);
		}
		if(sm.length() == 15){
			se = ss.substring(4, 8);
		}
		return se;
	}
	
	//毫秒数转时间
	public static Date longToDate(long time){
		
	    //输入毫秒数，转化为日期，用calendar方法；  
        Calendar calendar = Calendar.getInstance();  
        calendar.setTimeInMillis(time);  
        Date date = calendar.getTime();
        return date;
	
	}
	
	public static long quene(Date date) throws ParseException {
	    SimpleDateFormat simple = new SimpleDateFormat("yyyy-MM-dd");
        String format = simple.format(date);
        Date date1=simple.parse(format);
        long addDate = PeriodsUtil.addDate(date1);
        return addDate;
	}
	
//	Date转毫秒数
	public static long addDate(Date date) throws ParseException{
		long betweenDate = 0;
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		String dateString = date.toLocaleString();
		long specialDate = sdf.parse(dateString).getTime();
		
		return specialDate;
		
	}
	public void getNowTime(){
	Calendar currentDate = new GregorianCalendar();   
	  
	currentDate.set(Calendar.HOUR_OF_DAY, 0);  
	currentDate.set(Calendar.MINUTE, 0);  
	currentDate.set(Calendar.SECOND, 0);  
//	Date dateCursor = new Date();
//	dateCursor.setTodayStart((Date)currentDate.getTime().clone());s
	
	}
	
	public static void main(String[] args) throws ParseException {
	    long quene = quene(new Date());
		System.out.println(quene);
	}
	
}
